# Copyright Vespa.ai. All rights reserved.

ARG BASE_IMAGE=docker.io/almalinux:8
ARG VESPA_BASE_IMAGE=vespa

# Vespa install
FROM $BASE_IMAGE AS vespa

RUN dnf install -y dnf-plugins-core && \
    dnf install -y epel-release && \
    dnf config-manager --add-repo https://copr.fedorainfracloud.org/coprs/g/vespa/vespa/repo/epel-8/group_vespa-vespa-epel-8.repo && \
    dnf config-manager --enable powertools && \
    dnf config-manager --enable epel && \
    dnf install -y vespa && \
    dnf clean --enablerepo=* all

RUN dnf install -y gcc-c++ python3-devel && \
    pip3 install --no-cache-dir --upgrade pip  && \
    dnf remove -y remove gcc-c++ python3-devel && \
    yum clean --enablerepo=* all


FROM $VESPA_BASE_IMAGE AS systemtest

ENV LANG en_US.UTF-8

USER root

RUN dnf install -y dnf-plugins-core && \
    dnf config-manager --enable powertools && \
    dnf module enable -y ruby:3.1 && \
    dnf module enable -y maven:3.8 && \
    dnf install -y \
        bind-utils \
        gcc-toolset-13-annobin-docs \
        gcc-toolset-13-annobin-plugin-gcc \
        gcc-toolset-13-gcc-c++ \
        git-core \
        hostname \
        jq \
        libxml2-devel \
        lz4 \
        make \
        maven-openjdk17 \
        net-tools \
        python3-devel \
        redhat-rpm-config \
        ruby \
        ruby-devel \
        rubygems-devel \
        rubygem-bigdecimal \
        rubygem-builder \
        rubygem-concurrent-ruby \
        rubygem-parallel \
        rubygem-rexml \
        rubygem-test-unit \
        sudo \
        wget \
        zstd && \
    (source /opt/rh/gcc-toolset/enable && gem install ffi libxml-ruby) && \
    pip3 install --no-cache-dir --upgrade pip && \
    pip3 install --no-cache-dir awscli && \
    (source /opt/rh/gcc-toolset/enable && pip3 install --no-cache-dir xgboost scikit-learn) && \
    echo ": \${JAVA_HOME:=$(dirname $(dirname $(readlink -f /usr/bin/java)))}" > /etc/mavenrc

RUN --mount=type=bind,target=/context-root,source=.,ro \
    if [[ -d /context-root/rpms ]]; then echo -e "[vespa-rpms-local]\nname=Local Vespa RPMs\nbaseurl=file:///context-root/rpms/\nenabled=1\ngpgcheck=0" > /etc/yum.repos.d/vespa-rpms-local.repo; fi && \
    dnf -y install vespa-systemtest-tools && \
    if test "$(/opt/vespa/bin/vespa-print-default sanitizers)" != none; then \
      dnf debuginfo-install -y vespa-abseil-cpp vespa-libzstd vespa-lz4 vespa-onnxruntime vespa-openblas vespa-openssl vespa-protobuf glibc libatomic libffi libgcc libgfortran libicu libstdc++ llvm-libs ncurses-libs re2 xxhash-libs zlib && \
      dnf debuginfo-install -y vespa vespa-base-libs vespa-libs vespa-malloc; \
    fi && \
    dnf clean all && \
    rm -f /etc/yum.repos.d/vespa-rpms-local.repo && \
    rm -rf /var/cache/dnf

# Clear all dynamic debuginfo URLs. Current specific issue related to this is
# that libelfutils wants to download info when interrupting 'perf record'.
# Depending on network setup for Docker/Podman this might hang forever.
RUN rm -rf /etc/debuginfod/*

# We want to have the system test files owned by root to detect any tests
# that might want to write into this location.
COPY /vespa-systemtests /opt/vespa-systemtests

ENV RUBYLIB=/opt/vespa-systemtests/lib:/opt/vespa-systemtests/tests

# Currently both the root and vespa user need the cert/key because thes
# test controller must run as root. This can be changed to only vespa user
# when/if the restriction is lifted.
RUN /opt/vespa-systemtests/docker/include/setup-tls.sh root

# When running the system tests as vespa we require an additional
# set of locations to be available and writable by the user. The
# statements below are required for system tests to run currently.
RUN chown vespa:vespa /opt/vespa && \
    cp -a /root/.vespa /opt/vespa && \
    chown -R vespa:vespa /opt/vespa/.vespa && \
    chown -R vespa:vespa /opt/vespa/conf/vespa && \
    chown -R vespa:vespa /opt/vespa/conf/configserver-app && \
    chown -R vespa:vespa /opt/vespa/etc/vespa

USER vespa

ENV VESPA_CONFIGPROXY_JVMARGS="-XX:ThreadStackSize=1024k"
ENV VESPA_HOME=/opt/vespa
ENV VESPA_TLS_CONFIG_FILE=/opt/vespa/conf/vespa/tls/tls_config.json

COPY --chown=vespa:vespa /include/feature-flags.json /opt/vespa/var/vespa/flag.db

RUN --mount=type=bind,target=/context-root,source=./,ro \
    mkdir -p $VESPA_HOME/.m2 && \
    cp /context-root/include/local-maven-repo-settings.xml $VESPA_HOME/.m2/settings.xml && \
    /opt/vespa-systemtests/docker/include/populate-m2-repo.sh vespa && \
    rm -f $VESPA_HOME/.m2/settings.xml

ENTRYPOINT ["bash", "-lc", "source /opt/rh/gcc-toolset/enable && /opt/vespa-systemtests/lib/node_server.rb $NODE_SERVER_OPTS"]

