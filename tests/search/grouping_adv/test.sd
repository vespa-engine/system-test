# Copyright Vespa.ai. All rights reserved.
schema test {
  document test {
    field n type int {
      indexing: summary | attribute
    }
    field fa type array<double> {
      indexing: attribute
    }
    field na type array<int> {
      indexing: attribute
    }
    field nb type array<byte> {
      indexing: attribute
    }
    field nw type weightedset<int> {
      indexing: attribute
    }
    field f type float {
      indexing: attribute
    }
    field d type double {
      indexing: attribute
    }
    field sf type string {
      indexing: attribute
    }
    field s type string {
      indexing: attribute | index
    }
    field a type string {
      indexing: attribute | index | summary
    }
    field b type string {
      indexing: attribute | index | summary
    }
    field c type string {
      indexing: attribute | index | summary
    }
    field from type int {
      indexing: attribute | summary
    }
    field to type long {
      indexing: attribute | summary
    }
    field lang type string {
      indexing: attribute
    }
    field body type string {
      indexing: index | summary 
      rank-type: identity
    }
    field boool type bool {
      indexing: attribute | summary
    }
    field by type byte {
      indexing: attribute
    }
    field i type int {
      indexing: attribute
    }

    field msd type map<string, double> {
      struct-field key {
        indexing: attribute
      }
      struct-field value {
        indexing: attribute
      }
    }
  }
  fieldset default {
    fields: body
  }

  rank-profile default {
    first-phase {
      expression: attribute(f) * (attribute(from) / 1000000)
    }
  }

  rank-profile default-values {
    first-phase {
      expression: attribute(i)
    }
  }

  document-summary normal {
    summary a { source: a }
    summary b { source: b }
    summary c { source: c }
    summary documentid { source: documentid }
    summary from { source: from }
    summary to { source: to }
    summary body { source: body }
  }
  
  document-summary summary1 {
    summary a { source: a }
    summary n { source: n }
  }
}
