# Copyright Vespa.ai. All rights reserved.
schema expnr {
  document expnr {
    field f1 type string {
      indexing: index | summary
    }
    field f2 type string {
      indexing: index | summary
    }
    field f3 type string {
      indexing: index | summary
      rank: filter
    }
    field f4 type string {
      indexing: attribute | summary
    }
    field f5 type string {
      indexing: attribute | summary
    }
    field f6 type array<string> {
      indexing: index | summary
    }
  }
  fieldset default {
    fields: f1, f2
  }

  rank-profile default {
    first-phase {
      expression: nativeRank
    }
    summary-features {
      nativeRank
      nativeFieldMatch
      nativeProximity
      nativeAttributeMatch
    }
    rank-properties {
      nativeRank.useTableNormalization: "false"
      nativeRank.fieldMatchWeight: 0.50
      nativeRank.proximityWeight: 0.25
      nativeRank.attributeMatchWeight: 0.25
      nativeFieldMatch.firstOccurrenceTable.f1: "linear(0,200)"
      nativeFieldMatch.firstOccurrenceTable.f2: "linear(0,400)"
      nativeFieldMatch.firstOccurrenceTable.f3: "linear(0,800)"
      nativeFieldMatch.firstOccurrenceTable.f4: "linear(0,300)" # streaming case
      nativeFieldMatch.firstOccurrenceTable.f5: "linear(0,500)" # streaming case
      nativeFieldMatch.firstOccurrenceTable.f6: "linear(0,200)"
      nativeFieldMatch.firstOccurrenceImportance: "1.0"
      nativeProximity.proximityTable.f1: "linear(0,200)"
      nativeProximity.proximityTable.f2: "linear(0,400)"
      nativeProximity.proximityTable.f3: "linear(0,800)"
      nativeProximity.proximityTable.f4: "linear(0,300)" # streaming case
      nativeProximity.proximityTable.f5: "linear(0,500)" # streaming case
      nativeProximity.proximityImportance: "1.0"
      nativeProximity.proximityTable.f6: "linear(-4,400,101)"
      nativeProximity.reverseProximityTable.f6: "linear(-4,400,101)"
      nativeProximity.proximityImportance.f6: 0.75
      nativeAttributeMatch.weightTable.f4: "linear(0,200)"
      nativeAttributeMatch.weightTable.f5: "linear(0,400)"
    }
  }
  rank-profile only-f1 inherits default {
    summary-features {
      nativeRank(f1)
      nativeFieldMatch(f1)
      nativeProximity(f1)
    }
  }
  rank-profile only-f3 inherits default {
    summary-features {
      nativeRank(f3)
      nativeFieldMatch(f3)
      nativeProximity(f3)
    }
  }
  rank-profile only-f4 inherits default {
    summary-features {
      nativeRank(f4)
      nativeFieldMatch(f4)
      nativeProximity(f4)
      nativeAttributeMatch(f4)
    }
  }
  rank-profile only-f6 inherits default {
    summary-features {
      nativeRank(f6)
      nativeFieldMatch(f6)
      nativeProximity(f6)
    }
  }
  rank-profile only-f6-eg0 inherits only-f6 {
    rank-properties {
      nativeProximity.elementGap.f6: 0
    }
  }
  rank-profile only-f6-eg1 inherits only-f6 {
    rank-properties {
      nativeProximity.elementGap.f6: 1
    }
  }
  rank-profile only-f6-eginf inherits only-f6 {
    rank-properties {
      nativeProximity.elementGap.f6: infinity
    }
  }
}
